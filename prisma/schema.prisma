generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL")
  directUrl = env("POSTGRES_URL_NON_POOLING")
}

model Form {
  id              Int               @id @default(autoincrement())
  userId          String
  uid             String            @unique 
  createdAt       DateTime          @default(now())
  published       Boolean           @default(false)
  name            String
  description     String            @default("")
  content         String            @default("[]")
  visits          Int               @default(0)
  submissions     Int               @default(0)
  shareURL        String            @unique @default(uuid())
  domain          String            @default("")
  specialization  String            @default("")
  FormSubmissions FormSubmissions[]
  projectGroup ProjectGroup?

  @@unique([name, userId])
}

model FormSubmissions {
  id        Int      @id @default(autoincrement())
  createdAt DateTime @default(now())
  formId    Int
  content   String
  userId    String
  form      Form     @relation(fields: [formId], references: [id])
  profile   Profile? @relation(fields: [userId], references: [userId])
}

model Profile {
  id              Int               @id @default(autoincrement())
  userId          String            @unique
  name            String
  type            String            @default("student")
  title           String?
  bio             String?           @db.Text
  location        String?
  email           String?
  github          String?
  linkedin        String?
  organization    String?
  skills          String[]          @default([])
  achievements    String[]          @default([])
  ongoing_projects Json[]           @default([])
  createdAt       DateTime          @default(now())
  updatedAt       DateTime          @updatedAt
  submissions     FormSubmissions[]
  groupMembers    GroupMember[]     @relation("ProfileToGroupMember")
}

model ProjectGroup {
  id          Int       @id @default(autoincrement())
  uid         String        @unique // Add this line
  formId      Int       @unique  // One group per form/project
  name        String
  description String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  ownerId     String    // User ID of the project creator
  members     GroupMember[]
  form        Form      @relation(fields: [formId], references: [id])
}

model GroupMember {
  id      Int        @id @default(autoincrement())
  groupId Int
  userId  String
  role    String     @default("member")
  joinedAt DateTime  @default(now())
  status  String     @default("pending")
  group   ProjectGroup @relation(fields: [groupId], references: [id])
  profile Profile   @relation(fields: [userId], references: [userId], name: "ProfileToGroupMember")
}